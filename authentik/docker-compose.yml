---
version: '3.4'

services:
  postgresql:
    container_name: postgresql_authentik
    hostname: postgresql_authentik
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=change_me
      - POSTGRES_USER=authentik
      - POSTGRES_DB=authentik
    networks:
      - ChiralNet
  redis:
    container_name: redis_authentik
    hostname: redis_authentik
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
    networks:
      - ChiralNet
  server:
    container_name: authentik_server
    hostname: authentik_server
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.12.0}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: change_me
      AUTHENTIK_SECRET_KEY: change_me
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
    volumes:
      - /mnt/persist/config/authentik/media:/media
      - /mnt/persist/config/authentik/custom-templates:/templates
    ports:
      - 9000:9000
      - 9443:9443
    networks:
      - ChiralNet
  worker:
    container_name: authentik_worker
    hostname: authentik_worker
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.12.0}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: change_me
      AUTHENTIK_SECRET_KEY: change_me
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/persist/config/authentik/media:/media
      - /mnt/persist/config/authentik/certs:/certs
      - /mnt/persist/config/authentik/custom-templates:/templates
    networks:
      - ChiralNet

networks:
  ChiralNet:
    external: true

volumes:
  database:
    driver: local
  redis:
    driver: local
...
